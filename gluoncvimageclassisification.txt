image = mx.image.imread('fiel')

image.shape
(3,3,3)
image.dtype

image.min().asscalar()
image.max().asscalar()
plt.imshow(image.asnumpy())

image = gcv.data.transforms.presets.imagenet.transform_eval(image)

network gcv.model_zoo.get_model('',pretrainde = True)

prediction = network(image)

prediction.shape

probability = mx.nd.softmax(prediction)

rounded_probabaility = mx.nd.round(probability*100/100)

mx.nd.softmax(mx.nd.array((-1,1))

k=5
topk_indices = mx.nd.topk(probability,k=k)

network.classes[index]

for i in range(k):
	class_index = top_indices[i].astype('int').asscalar()
	class_label = network.classes[class_index]
	class_probability = probability[class_index]
	print('#{} {} ({:0.3}%)'.format(i+1,class_label,class_probability.asscalar()*100))